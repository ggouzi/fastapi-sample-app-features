version: '2.1'
services:
  fastapi-example:
    image: fastapi-example-features:latest
    container_name: fastapi-example-container
    hostname: fastapi-example-host
    build:
      context: ./app
    env_file:
      - ./app/.env.docker-compose
    depends_on:
      mysql:
        condition: service_healthy

  nginx:
    image: nginx:latest
    hostname: nginx-host
    ports:
      - "8080:8080"
    container_name: nginx-container
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - mysql
      - fastapi-example

  mysql:
    image: mysql:latest
    container_name: mysql-container
    hostname: mysql-host
    environment:
      MYSQL_ROOT_PASSWORD: test
      MYSQL_DATABASE: test
      MYSQL_USER: test
      MYSQL_PASSWORD: test
    volumes:
      - ./database/base/01_init_db.sql:/docker-entrypoint-initdb.d/01_init_db.sql
      - ./database/base/02_schema.sql:/docker-entrypoint-initdb.d/02_schema.sql
      - ./database/base/03_data.sql:/docker-entrypoint-initdb.d/03_data.sql
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      timeout: 8s


  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
      - '--web.route-prefix=/prometheus/'
      - '--web.external-url=/prometheus/'


  grafana:
    image: grafana/grafana
    container_name: grafana
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SERVER_ROOT_URL=http://localhost:3000/grafana
      - GF_SERVER_SERVE_FROM_SUB_PATH=true
      - GF_DASHBOARDS_JSON_ENABLED=true
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
